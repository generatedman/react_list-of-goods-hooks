{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","className","type","ALPHABET","onClick","LENGTH","goods","sortBy","reversed","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAkCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBF,IAAaP,EAASW,SAC/C,WACA,IACJC,QAAS,kBAAMJ,EAAYR,EAASW,WALtC,iCAUA,wBACED,KAAK,SACLD,UAAS,4BAAuBF,IAAaP,EAASa,OAClD,WACA,IACJD,QAAS,kBAAMJ,EAAYR,EAASa,SALtC,4BAUA,wBACEH,KAAK,SACLD,UAAS,4BAAwBL,EAE7B,GADA,YAEJQ,QAAS,kBAAMP,GAAYD,IAL7B,sBAUEG,IAAaP,EAASM,MAAQF,IAC9B,wBACEM,KAAK,SACLD,UAAU,4BACVG,QArEI,WACZJ,EAAYR,EAASM,MACrBD,GAAW,IAgEL,sBAUJ,6BACE,6BAxEoB,SACxBS,EACAC,EACAC,GAGA,IAAMC,EAAY,YAAOH,GAkBzB,OAhBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKf,EAASW,SACZ,OAAOQ,EAAEE,cAAcD,GAEzB,KAAKpB,EAASa,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAGTN,GACFC,EAAaM,UAGRN,EAiDAO,CACCvB,EACAM,EACAH,GACAqB,KAAI,SAAAC,GAAI,OACR,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC3GrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.13bc5e7c.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const getReorderedGoods = (\n    goods: string[],\n    sortBy: SortType,\n    reversed: boolean,\n  ) => {\n    // To avoid the original array mutation\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n\n        case SortType.LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n    if (reversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET\n            ? 'is-light'\n            : ''}`}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH\n            ? 'is-light'\n            : ''}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed\n            ? 'is-light'\n            : ''}`}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            sortType,\n            isReversed,\n          ).map(good => (\n            <li key={good} data-cy=\"good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}